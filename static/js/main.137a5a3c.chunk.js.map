{"version":3,"sources":["components/TodoList/TodoList.tsx","api.ts","components/CurrentUser/CurrentUser.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","selectUserId","useState","actualTodos","setActualTodos","input","setInput","filter","value","todo","completed","title","includes","className","id","onChange","event","target","preventDefault","selected","disabled","type","map","cn","TodoList__item","htmlFor","checked","readOnly","onClick","userId","request","endpoint","fetch","then","response","json","CurrentUser","user","setUser","useEffect","UserId","name","email","phone","App","selectedUserId","setSelectedUserId","setTodos","todosFromServer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.137a5a3c.chunk.js","sourcesContent":["/* eslint-disable no-console */\nimport React, { useState } from 'react';\nimport './TodoList.scss';\nimport cn from 'classnames';\n\ntype Props = {\n  todos: Todo[]\n  selectUserId: (userId: number) => void;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectUserId,\n}) => {\n  const [actualTodos, setActualTodos] = useState(todos);\n  const [input, setInput] = useState('');\n\n  function filter(value: string) {\n    switch (value) {\n      case 'all':\n        setActualTodos(todos);\n        break;\n      case 'active':\n        setActualTodos(todos.filter(todo => todo.completed === false));\n        break;\n      case 'completed':\n        setActualTodos(todos.filter(todo => todo.completed === true));\n        break;\n      default:\n        setActualTodos(actualTodos.filter(todo => todo.title.includes(value)));\n        break;\n    }\n  }\n\n  return (\n    <div className=\"TodoList\">\n      <h2>Todos:</h2>\n      <select\n        className=\"TodoList__inputs\"\n        id=\"filter\"\n        onChange={\n          (event) => {\n            filter(event.target.value);\n            setInput('');\n            event.preventDefault();\n          }\n        }\n      >\n        <option value=\"0\" selected disabled>Please choose users</option>\n        <option value=\"all\">all</option>\n        <option value=\"active\">active</option>\n        <option value=\"completed\">completed</option>\n      </select>\n      <span className=\"TodoList__inputs\">Please Enter</span>\n      <input\n        className=\"TodoList__inputs\"\n        type=\"text\"\n        value={input}\n        onChange={\n          (event) => {\n            setInput(event.target.value);\n            filter(event.target.value);\n          }\n        }\n      />\n      <div className=\"TodoList__list-container\">\n        <ul className=\"TodoList__list\">\n          {actualTodos.map(todo => (\n            <>\n              <li\n                key={todo.id}\n                className={cn({\n                  TodoList__item: true,\n                  'TodoList__item--unchecked': !todo.completed,\n                  'TodoList__item--checked': todo.completed,\n                })}\n              >\n                <label htmlFor={`${todo.id}`}>\n                  <input\n                    id={`${todo.id}`}\n                    checked={todo.completed}\n                    type=\"checkbox\"\n                    readOnly\n                  />\n                  <p>{ todo.title }</p>\n                </label>\n\n                <button\n                  className=\"\n                TodoList__user-button\n                TodoList__user-button--selected\n                button\n              \"\n                  type=\"button\"\n                  onClick={() => {\n                    selectUserId(todo.userId);\n                  }}\n                >\n                  User&nbsp;#\n                  {todo.userId}\n                </button>\n              </li>\n            </>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n};\n","const BASE_URL = 'https://mate.academy/students-api/';\n\nfunction request(endpoint: string) {\n  return fetch(`${BASE_URL}${endpoint}`)\n    .then(response => response.json());\n}\n\nexport function getTodos() {\n  return request('/todos');\n}\n\nexport function getUser(UserId: number): Promise<User> {\n  return request(`/users/${UserId}`);\n}\n","import React, { useEffect, useState } from 'react';\nimport { getUser } from '../../api';\nimport './CurrentUser.scss';\n\ntype Props = {\n  userId: number,\n};\n\nexport const CurrentUser: React.FC<Props> = ({\n  userId,\n}) => {\n  const [user, setUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    getUser(userId).then(setUser);\n  }, [userId]);\n\n  return (\n    <div className=\"CurrentUser\">\n      {user ? (\n        <>\n          <h2 className=\"CurrentUser__title\">\n            <span>\n              Selected user:&nbsp;\n              {userId}\n            </span>\n          </h2>\n          <h3 className=\"CurrentUser__name\">{user.name}</h3>\n          <p className=\"CurrentUser__email\">{user.email}</p>\n          <p className=\"CurrentUser__phone\">{user.phone}</p>\n        </>\n      ) : (\n        <p>Loading...</p>\n      )}\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\nimport { getTodos } from './api';\n\nconst App: React.FC = () => {\n  const [selectedUserId, setSelectedUserId] = useState(0);\n  const [todos, setTodos] = useState([]);\n\n  useEffect(() => {\n    getTodos().then(todosFromServer => {\n      setTodos(todosFromServer);\n    });\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <div className=\"App__sidebar\">\n        <TodoList\n          todos={todos}\n          selectUserId={setSelectedUserId}\n        />\n      </div>\n\n      <div className=\"App__content\">\n        <div className=\"App__content-container\">\n          {selectedUserId ? (\n            <CurrentUser userId={selectedUserId} />\n          ) : 'No user selected'}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}